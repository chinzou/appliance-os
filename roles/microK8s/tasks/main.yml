- name: Install base dependencies
  apt:
    name:
      - snapd
    state: present
  become: yes

- name: Check is ufw installed
  shell: command -v ufw >/dev/null 2>&1
  register: is_ufw_exist
  ignore_errors: yes

- name: Disabling ufw
  command: ufw disable
  become: yes
  when: is_ufw_exist.rc == 0

- name: Set ip forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes

- name: Disable Swap
  command: swapoff -a

- name: Enable cgroups
  lineinfile:
    dest: /boot/firmware/cmdline.txt
    regexp: '^net.ifnames'
    line: "net.ifnames=0 dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=LABEL=writable rootfstype=ext4 elevator=deadline rootwait fixrtc cgroup_enable=memory cgroup_memory=1"
    state: present
  register: cgroups_enabled

- name: Reboot host and wait for it to restart
  reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami
  when: cgroups_enabled.changed

- name: Install MicroK8s
  become: yes
  snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_version }}"

- name: Update Microk8s docker-daemon.json file
  template:
    src: "docker-daemon.json"
    dest: "/var/snap/microk8s/current/args/docker-daemon.json"
    owner: "root"
    group: "root"

- name: Microk8s status
  shell: source /etc/profile.d/apps-bin-path.sh && microk8s.status --wait-ready
  args:
    executable: /bin/bash

- name: Add Insecure Registries
  import_tasks: add-insecure-registries.yml

- name: Stop Microk8s
  shell: source /etc/profile.d/apps-bin-path.sh && microk8s.stop
  args:
    executable: /bin/bash

- name: Start Microk8s
  shell: source /etc/profile.d/apps-bin-path.sh && microk8s.start
  args:
    executable: /bin/bash
  retries: 3
  delay: 3
  register: result
  until: result.rc == 0

- name: Microk8s status
  shell: source /etc/profile.d/apps-bin-path.sh && microk8s.status --wait-ready
  args:
    executable: /bin/bash

- name: Microk8s inspect
  shell: source /etc/profile.d/apps-bin-path.sh && microk8s.inspect
  args:
    executable: /bin/bash

- name: Alias kubectl
  shell: "source /etc/profile.d/apps-bin-path.sh && snap alias microk8s.kubectl kubectl"
  args:
    executable: /bin/bash

- name: Enable dns
  shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable dns"
  args:
    executable: /bin/bash

- name: Enable ingress
  shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable ingress"
  args:
    executable: /bin/bash

- name: Enable storage
  shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable storage"
  args:
    executable: /bin/bash

- name: Enable K8s Dashboard
  shell: "source /etc/profile.d/apps-bin-path.sh && /snap/bin/microk8s.enable dashboard"
  when: k8s_dashboard|default(False)|bool == True
  args:
    executable: /bin/bash
